{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","onShow","className","map","todo","id","completed","title","type","onClick","TodoFilter","onFilter","useState","All","status","setStatus","searchBy","setSearchBy","onChange","event","target","value","Active","Completed","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","a","loadedTodos","getUser","userId","loadedUser","Loader","TodoModal","stopShow","todoFromId","setTodoFromId","user","setUser","getUserFromServer","useEffect","find","href","email","name","App","setTodos","visibleTodos","setVisibleTodos","setUserId","getTodosFromServer","filterBy","searchByStr","toLowerCase","includes","filter","visible","userNum","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7347cd80.chunk.js","sourcesContent":["export enum Filter {\n  Active = 'all',\n  Completed = 'active',\n  All = 'completed',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onShow: (userNum: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, onShow }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={todo.completed ? (\n              'has-text-success'\n            ) : (\n              'has-text-danger'\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                onShow(todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { useState } from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  onFilter: (filterBy: Filter, searchBy: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ onFilter }) => {\n  const [status, setStatus] = useState(Filter.All);\n  const [searchBy, setSearchBy] = useState('');\n\n  const handleFilterSetting = (target: Filter) => {\n    setStatus(target || Filter.All);\n    onFilter(target, searchBy);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              handleFilterSetting(event.target.value as Filter);\n            }}\n          >\n            <option value={Filter.All}>All</option>\n            <option value={Filter.Active}>Active</option>\n            <option value={Filter.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          onChange={(event) => {\n            setSearchBy(event.target.value);\n            onFilter(status, event.target.value);\n          }}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchBy}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchBy && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              onClick={() => {\n                setSearchBy('');\n                onFilter(status, '');\n              }}\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  const loadedTodos = await get<Todo[]>('/todos');\n\n  return loadedTodos;\n};\n\nexport const getUser = async (userId: number): Promise<User> => {\n  const loadedUser = await get<User>(`/users/${userId}`);\n\n  return loadedUser;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todos: Todo[];\n  userId: number;\n  stopShow: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todos, userId, stopShow }) => {\n  const [todoFromId, setTodoFromId] = useState<Todo>();\n  const [user, setUser] = useState<User>();\n\n  const getUserFromServer = async () => {\n    const loadedUser = await getUser(userId);\n\n    setUser(loadedUser);\n  };\n\n  useEffect(() => {\n    getUserFromServer();\n    setTodoFromId(todos.find(todo => todo.userId === userId));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {user.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                stopShow();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoFromId?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todoFromId?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState([...todos]);\n  const [userId, setUserId] = useState(0);\n\n  const getTodosFromServer = async () => {\n    const loadedTodos = await getTodos();\n\n    setTodos(loadedTodos);\n    setVisibleTodos(loadedTodos);\n  };\n\n  const showTodo = (userNum: number) => {\n    setUserId(userNum);\n  };\n\n  const stopShowTodo = () => {\n    setUserId(0);\n  };\n\n  const filterTodo = (filterBy: Filter, searchBy: string) => {\n    const searchByStr = (title: string) => {\n      return title.toLowerCase().includes(searchBy.toLowerCase());\n    };\n\n    switch (filterBy) {\n      case Filter.Active:\n        setVisibleTodos(todos.filter(visible => !visible.completed\n          && searchByStr(visible.title)));\n        break;\n      case Filter.Completed:\n        setVisibleTodos(todos.filter(visible => visible.completed\n          && searchByStr(visible.title)));\n        break;\n      case Filter.All:\n        setVisibleTodos(todos.filter(visible => searchByStr(visible.title)));\n        break;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onFilter={filterTodo} />\n            </div>\n\n            <div className=\"block\">\n              {!todos ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  onShow={showTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {userId !== 0 && (\n        <TodoModal\n          todos={todos}\n          userId={userId}\n          stopShow={stopShowTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}